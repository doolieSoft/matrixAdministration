/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDialogAjouterElement.java
 *
 * Created on 08-avr.-2011, 19:02:05
 */

package table_des_matieres.view;


import java.util.ResourceBundle;
import table_des_matieres.lib.autocompletepack.AutoCompleteDecorator;
import table_des_matieres.lib.panel.RoundedPanel;
import table_des_matieres.lib.MyUtil;

import java.sql.Statement;
import java.sql.SQLException;
import java.sql.ResultSet;
import javax.swing.JFileChooser;
import javax.swing.BorderFactory;
import java.util.Date;
import java.util.Calendar;
import java.sql.DriverManager;
import java.sql.Connection;
import java.util.Locale;
import java.text.SimpleDateFormat;
import java.text.DateFormat;
import java.text.ParseException;
import java.util.ArrayList;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SwingConstants;
import java.awt.Component;
/**
 *
 * @author fabrice
 */
public class Ratio_View extends javax.swing.JDialog {
    private static final ResourceBundle bundle = ResourceBundle.getBundle("table_des_matieres/Bundle");

    /** Creates new form JDialogAjouterElement */
    Matrix_View parentFrame;
    int idSelected;
    public enum TypeDialog { AJOUT, MODIF};
    TypeDialog typeDialog;
    public Ratio_View(Matrix_View parent, TypeDialog td) {
        super(parent, true);
        initComponents();
        initAutoComplete();
        parentFrame=parent;
        setLocationRelativeTo(null);
        typeDialog=td;
        switch(typeDialog) {
            case AJOUT:
                    jPanel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(), bundle.getString("AJOUTER UN PRÉLÈVEMENT")));
                break;
            case MODIF:
                    jPanel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(), bundle.getString("MODIFIER LE PRÉLÈVEMENT")));
                    jButtonAjouter.setText(bundle.getString("MODIFIER"));

                    idSelected = parentFrame.getJTable2().convertRowIndexToModel(parentFrame.getJTable2().getSelectedRow());
                    
                    String agent = parentFrame.getJTable2().getModel().getValueAt(idSelected, 1).toString();
                    String ci = parentFrame.getJTable2().getModel().getValueAt(idSelected, 2).toString();
                    String ratio = parentFrame.getJTable2().getModel().getValueAt(idSelected, 3).toString();
                    
                    textFieldAgent.setText(agent);
                    textFieldCI.setText(ci);
                    textFieldRatio.setText(ratio);
                
                try {
                    Connection connection = DriverManager.getConnection(Matrix_View.MATRIX_DB_CONNECTION);

                    Statement statement = connection.createStatement();
                    ResultSet ret = statement.executeQuery("SELECT ELEMENT_ID, AGENT, CI, RATIO "+
                                                    "FROM ELEMENT "+
                                                    "WHERE ELEMENT_ID = '"+parentFrame.getJTable2().getModel().getValueAt(parentFrame.getJTable2().getSelectedRow(), 0).toString()+"' ");
                    ret.next();

                    statement.close();
                    connection.close();
                }
                catch(SQLException ex) {
                    ex.printStackTrace();
                }

                break;
        }
    }

    private void initAutoComplete() {
        try {
            Connection connection = DriverManager.getConnection(Matrix_View.MATRIX_DB_CONNECTION);

            Statement statement = connection.createStatement();
            ResultSet ret = statement.executeQuery("SELECT DISTINCT AGENT, CI, CASIER FROM ELEMENT");
             
            ArrayList listeAgent= new ArrayList();
            ArrayList listeCI= new ArrayList();
            ArrayList listeRatio= new ArrayList();

            while(ret.next()) {
                 listeAgent.add(ret.getString("agent"));
                 listeCI.add(ret.getString("ci"));
                 listeRatio.add(ret.getString("ratio"));
            }
            AutoCompleteDecorator.decorate(textFieldAgent,listeAgent, false);
            AutoCompleteDecorator.decorate(textFieldCI,listeCI, false);
            AutoCompleteDecorator.decorate(textFieldRatio,listeRatio, false);

            ret.close();

        }
        catch(SQLException e) {

        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new RoundedPanel();
        labelDate = new javax.swing.JLabel();
        textFieldAgent = new javax.swing.JTextField();
        labelAgent = new javax.swing.JLabel();
        labelCI = new javax.swing.JLabel();
        labelRatio = new javax.swing.JLabel();
        textFieldRatio = new javax.swing.JTextField();
        textFieldCI = new javax.swing.JTextField();
        jButtonAjouter = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(97, 210, 110));

        textFieldAgent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });

        labelAgent.setText(bundle.getString("AGENT")); // NOI18N

        labelCI.setText(bundle.getString("CI")); // NOI18N

        labelRatio.setText(bundle.getString("RATIO")); // NOI18N

        textFieldRatio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField4KeyReleased(evt);
            }
        });

        textFieldCI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField3KeyReleased(evt);
            }
        });

        jButtonAjouter.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.foreground"));
        jButtonAjouter.setText(bundle.getString("AJOUTER")); // NOI18N
        jButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterActionPerformed(evt);
            }
        });

        jButton2.setText(bundle.getString("ANNULER")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1Layout.setHorizontalGroup(
        	jPanel1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel1Layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(labelCI)
        				.addComponent(labelRatio)
        				.addComponent(labelAgent)
        				.addComponent(labelDate))
        			.addGap(18)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addGap(118)
        					.addComponent(jLabel6)
        					.addGap(27))
        				.addComponent(textFieldAgent, GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
        				.addComponent(textFieldRatio, GroupLayout.PREFERRED_SIZE, 115, GroupLayout.PREFERRED_SIZE)
        				.addComponent(textFieldCI, GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addComponent(jButtonAjouter)
        					.addGap(18)
        					.addComponent(jButton2)))
        			.addGap(63))
        );
        jPanel1Layout.setVerticalGroup(
        	jPanel1Layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(jPanel1Layout.createSequentialGroup()
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(labelDate)
        				.addComponent(jLabel6))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(labelAgent)
        				.addComponent(textFieldAgent, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(labelCI)
        				.addComponent(textFieldCI, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(labelRatio)
        				.addComponent(textFieldRatio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(textFieldAgent, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addGap(57)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jButton2)
        				.addComponent(jButtonAjouter))
        			.addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.linkSize(SwingConstants.VERTICAL, new Component[] {textFieldAgent, textFieldRatio, textFieldCI, jButtonAjouter, jButton2});
        jPanel1Layout.linkSize(SwingConstants.HORIZONTAL, new Component[] {jButtonAjouter, jButton2});
        jPanel1.setLayout(jPanel1Layout);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        // TODO add your handling code here:
        int keyCode=evt.getKeyCode();
        switch(keyCode) {
            case 10:
            case 40:textFieldAgent.transferFocus();
            break;
        }
}//GEN-LAST:event_jTextField2KeyReleased

    private void jTextField4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyReleased
        // TODO add your handling code here:
        int keyCode=evt.getKeyCode();
        switch(keyCode) {
            case 10:
            break;
            case 38:textFieldCI.requestFocusInWindow();;
            break;
        }
}//GEN-LAST:event_jTextField4KeyReleased

    private void jTextField3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyReleased
        // TODO add your handling code here:
        int keyCode=evt.getKeyCode();
        switch(keyCode) {
            case 10:
            case 40:textFieldRatio.requestFocusInWindow();
            break;
            case 38:textFieldAgent.requestFocusInWindow();;
            break;
        }
    }//GEN-LAST:event_jTextField3KeyReleased

    private void jButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterActionPerformed
        // TODO add your handling code here:


        try {

            if (evt.getActionCommand().equals(bundle.getString("AJOUTER"))) {

                    Connection connection = DriverManager.getConnection(Matrix_View.MATRIX_DB_CONNECTION);

                    
                    
                    textFieldAgent.setText(MyUtil.toUpperCaseExceptµ(textFieldAgent.getText()));
                    textFieldCI.setText(MyUtil.toUpperCaseExceptµ(textFieldCI.getText()));
                    textFieldRatio.setText(MyUtil.toUpperCaseExceptµ(textFieldRatio.getText()));

                    Statement statement = connection.createStatement();
                    int ret = statement.executeUpdate("INSERT INTO ELEMENT(AGENT, CI, RATIO) VALUES(" +
                           "'" + this.textFieldAgent.getText() + "', " +
                           "'" + this.textFieldCI.getText() + "', " +
                           "'" + this.textFieldRatio.getText() + "')");
                    System.out.println("INSERT INTO ELEMENT(AGENT, CI, RATIO) VALUES(" +
                           "'" + this.textFieldAgent.getText()+ "', " +
                           "'" + this.textFieldCI.getText() + "', " +
                           "'" + this.textFieldRatio.getText() + "'");
                    connection.close();
                    parentFrame.LoadData();
                    this.dispose();
            }
            else {
                if (evt.getActionCommand().equals(bundle.getString("MODIFIER"))) {
                        Connection connection = DriverManager.getConnection(Matrix_View.MATRIX_DB_CONNECTION);

                        Statement statement = connection.createStatement();
                        String query = "UPDATE ELEMENT SET AGENT='" + MyUtil.toUpperCaseExceptµ(textFieldAgent.getText()) + "'"+
                                ", CI='" + MyUtil.toUpperCaseExceptµ(textFieldCI.getText()) + "'"+
                                ", RATIO='" + MyUtil.toUpperCaseExceptµ(textFieldRatio.getText()) + "' " +
                                " WHERE ELEMENT_ID="+parentFrame.getJTable2().getModel().getValueAt(idSelected, 0);

                        int ret = statement.executeUpdate(query);
                        while(parentFrame.getTableModel().getRowCount()>0) {
                            parentFrame.getTableModel().removeRow(0);
                        }
                        connection.close();
                        parentFrame.LoadData();
                        this.dispose();
                }
            }
            }
             catch(SQLException insertException) {
                insertException.printStackTrace();
            }

}//GEN-LAST:event_jButtonAjouterActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAjouter;
    private javax.swing.JLabel labelDate;
    private javax.swing.JLabel labelAgent;
    private javax.swing.JLabel labelCI;
    private javax.swing.JLabel labelRatio;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField textFieldAgent;
    private javax.swing.JTextField textFieldCI;
    private javax.swing.JTextField textFieldRatio;
    // End of variables declaration//GEN-END:variables

}
